services:
  builder:
    image: golang:1.24.5-alpine3.22
    working_dir: /src/main
    volumes:
      - ./src/:/src
      - ./data/app/:/app
    environment:
      CGO_ENABLED: 0
      GOOS: linux
    command: sh -c "go mod tidy && go build -o /app/start ."

  app:
    image: alpine:3.22
    depends_on:
      db:
        condition: service_healthy
      builder:
        condition: service_completed_successfully
    working_dir: /app
    volumes:
      - ./data/app/:/app
    command: ./start
    ports:
      - "10000:10000"
    networks:
      - app-network
    restart: always

  db:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
